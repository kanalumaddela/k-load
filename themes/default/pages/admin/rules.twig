{% extends 'base.twig' %}

{% block title %}Rules | K-Load{% endblock %}

{% block css_body %}
<style>
.card-content {
	position: relative;
}
.cat.delete-elem {
	z-index: 1;
	cursor: pointer;
	position: absolute;
	top: 6px;
	right: 6px;
	width: 28px;
	height: 28px;
	background-color: transparent;
	font-size: 1.25rem;
	border: none;
	border-radius: 50%;
}
</style>
{% endblock %}
{% block content %}
	<h3><i class="mdi mdi-format-list-numbers left"></i>Rules</h3>
	<p>Here you can create rules for specific gamemodes or rules in general.</p>

	{% include '@partials/gamemode-examples.twig' %}

	<form method="post" action="{{site.path}}/dashboard/admin/rules" class="row" style="padding-top:15px;padding-bottom:15px;">
		{{ csrf|raw }}

		<div class="col s12">
			<a class="btn green add-elem" data-type="rule_cat" data-parent="#rule_categories">Add Gamemode</a>
		</div>

		<div id="rule_categories" class="row">
			{% for gamemode, rules in settings.rules %}
				<div class="col s12 child">
					<div class="card">
						<span class="mdi mdi-close red-text delete-elem cat"></span>
						<div class="card-content">
							<label>Gamemode</label>
							<input class="gamemode" type="text" placeholder="gamemode" value="{{ gamemode }}" oninput="fixGamemode(this)" required />
							<label>Rules</label>
							<div class="rules">
								{% for rule in rules %}
									<div class="input-field child">
										<input type="text" name="rules[{{ gamemode }}][]" value="{{ rule }}" oninput="fixGamemode(this, true)" style="width: 80%">
										<a class="btn-floating red delete-elem"><i class="mdi mdi-delete"></i></a>
									</div>
								{% endfor %}
							</div>
							<a class="btn blue add-elem" data-type="rule" data-parent=".rules">Add Rule</a>
						</div>
					</div>
				</div>
			{% endfor %}
		</div>

		<div class="fixed-action-btn">
			<button id="save-btn" class="btn-floating btn-large blue" type="submit" name="save" value="1"><span class="mdi mdi-content-save"></span></button>
		</div>

	</form>
{% endblock %}


{% block js %}
<script>
function fixGamemode(elem, isChildren = false) {
	if (!isChildren) {
		var gamemode = elem.value;
		var rules = $(elem).next().next('.rules').children();
		$('.gamemode-text').text(gamemode);
	} else {
		var gamemode = $(elem).parent().parent().parent().find('.gamemode');
		if (gamemode.length > 0) {
			gamemode = gamemode[0].value;
			var rules = $(elem).parent().parent().find('.input-field.child');
		}
	}

	if (rules.length > 0) {
		$.each(rules, function(key, child) {
			var input = $(child).find('input')[0];
			input.setAttribute('name', 'rules['+gamemode+'][]');
		});
	}
}
function createElem_rule_cat() {
	return elem('div', {className: 'col s12 child'},
				elem('div', {className: 'card'},
					elem('span', {className: 'mdi mdi-close red-text delete-elem cat'}),
					elem('div', {className: 'card-content'},
						elem('label', {innerText: 'Gamemode'}),
						elem('input', {className: 'gamemode', type: 'text', placeholder: 'gamemode', onInput: 'fixGamemode(this)', required: true }),
						elem('label', {innerText: 'Rules'}),
						elem('div', {className: 'rules'}),
						elem('a', {className: 'btn blue add-elem', innerText: 'Add Rule', 'data-type': 'rule', 'data-parent': '.rules'})
						)
					)
				);
}

function createElem_rule() {
	return elem('div', {className: 'input-field child'},
				elem('input', {type: 'text', name: 'rules[global][]', onInput: 'fixGamemode(this, true)', style: 'width: 80%'}),
				elem('a', {className: 'btn-floating red delete-elem'},
					elem('i', {className: 'mdi mdi-delete'})
					)
				);
}
</script>
{% endblock %}
