{% extends 'base.twig' %}

{% block title %}Settings | K-Load{% endblock %}

{% block content %}
    <form method="post" action="{{site.path}}/dashboard/admin/music" class="row" style="padding-top:15px;margin-bottom:15px;">
        {{ csrf|raw }}

        <div class="col s12 m6">
            <div class="card">
                <div class="card-content">
                    <h1 class="flow-text"><span class="mdi mdi-settings"></span>General Music Options</h1>
                    <div class="row">
                        <div class="switch col s6">
                            <p>
                                Enable?
                            </p>
                            <label>
                                No
                                <input type="checkbox" name="music[enable]" value="1" {% if music.enable %}checked{% endif %} />
                                <span class="lever"></span>
                                Yes
                            </label>
                        </div>
                        <div class="switch col s6">
                            <p>
                                Randomize?
                            </p>
                            <label>
                                No
                                <input type="checkbox" name="music[random]" value="1" {% if music.random %}checked{% endif %} />
                                <span class="lever"></span>
                                Yes
                            </label>
                        </div>
                        <div class="input-field col s12">
                            Volume
                            <p class="range-field">
                                <input type="range" id="volume" min="0" max="100" name="music[volume]" value="{{ music.volume|default(15) }}" />
                            </p>
                        </div>
                        <div class="input-field col s12">
                            <select name="music[source]" class="materialize-select">
                                <option value="youtube" {% if music.source == 'youtube'%}selected{% endif %}>YouTube</option>
                                <option value="soundcloud" disabled {% if settings.music.source == 'soundcloud'%}selected{% endif %}>SoundCloud (not added yet)</option>
                                <option value="files" {% if music.source == 'files'%}selected{% endif %}>Music Files</option>
                            </select>
                            <label>Music Source</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col s12 m6">
            <div class="card">
                <div class="card-content">
                    <h1 class="flow-text"><span class="mdi mdi-youtube-play"></span>YouTube</h1>
                    <div id="yt_vids">
                        {% for youtube_id in youtube.list %}
                            <div class="input-field child">
                                <input type="text" name="youtube[list][]" placeholder="YouTube URL" value="https://www.youtube.com/watch?v={{youtube_id}}" style="width: 80%;">
                                <a class="btn-floating delete-elem red"><i class="mdi mdi-delete"></i></a>
                            </div>
                        {% endfor %}
                    </div>
                    <div>
                        <a class="btn green add-elem" data-type="youtube" data-parent="#yt_vids"><span class="mdi mdi-plus"></span>Add Video</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <h1 class="flow-text"><span class="mdi mdi-format-list-checks"></span>Songs to Play <small>(duplicate songs will get removed when saving)</small></h1>
                    <div id="music_order">
                        {% for song in music.order %}
                            <div class="input-field child">
                                {% include '@partials/music-order-select.twig' with {'song': song, 'music_files': music_files} only %}
                                <a class="btn-floating delete-elem red"><i class="mdi mdi-delete"></i></a>
                            </div>
                        {% endfor %}
                    </div>
                    <div>
                        <a class="btn green add-elem" data-type="musicSelect" data-parent="#music_order"><span class="mdi mdi-plus"></span>Add Song</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col s12 center">
            <button class="btn blue tooltipped" data-position="top" data-tooltip="Save" type="submit" name="save" value="1">Save Changes</button>
        </div>
    </form>

    <hr/>

    <div class="row" style="margin-top: 15px;">
        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <h1 class="flow-text"><span class="mdi mdi-music"></span>Music Files</h1>

                    <div id="music_files" class="row">
                        <!--
                        <a class="btn-floating play-song blue" style="margin-right: 5px"><i class="mdi mdi-play"></i></a>
                        <a class="btn-floating pause-song orange" style="margin-right: 5px"><i class="mdi mdi-pause"></i></a>
                        <a class="btn-floating stop-song red" style="margin-right: 5px"><i class="mdi mdi-stop"></i></a>
                        <a class="btn-floating edit-song orange" style="margin-right: 5px"><i class="mdi mdi-pencil"></i></a>
                        -->
                        {% for file in music_files %}
                            <div id="{{ file.row_id }}" class="col s12" data-file="{{ file.filename }}">
                                <h5 class="song-title truncate">
                                    <a class="blue-text link--hover" href="{{ file.url }}" target="_blank">{{ file.name }} <i class="mdi mdi-open-in-new"></i></a>
                                </h5>
                                <div class="valign-wrapper right">
                                    <a class="btn-floating delete-song red"><i class="mdi mdi-delete"></i></a>
                                </div>
                            </div>
                        {% endfor %}
                    </div>

                    <div class="center">
                        <input id="music_file_upload" type="file" style="display: none;" accept="audio/ogg" />
                        <label for="music_file_upload" class="btn green tooltipped" data-tooltip="Only '.ogg' files are allowed" data-position="top" data-delay="25"><span class="mdi mdi-upload"></span>Upload</label>
                        <!--<a class="btn green"></a>-->
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block js %}
    <script>
        var music_files = {{ music_files|default('[]')|json_encode|raw }};
        var music_files_select = elem('select', {className: 'materialize-select', name: 'music[order][]'});

        for (let i = 0; i < music_files.length; i++) {
            music_files_select.appendChild(elem('option', {value: music_files[i].filename, innerText: music_files[i].name}));
        }

        $('#music_file_upload').on('input', function (event) {
            if (this.files.length > 0) {
                let file = this.files[0];

                if (file.type !== 'audio/ogg') {
                    toast('Incorrect file type: ' + file.type + '. \'audio/ogg\' files only.', 5000, 'red');
                    return;
                }

                let formData = new FormData();
                formData.append('music_file', file);

                let uploadUrl = site.current;
                if (uploadUrl.substr(-1) === '/') {
                    uploadUrl = uploadUrl.substr(0, uploadUrl.length -1);
                }

                $.ajax({
                    type: 'POST',
                    url: uploadUrl  + '/upload',

                    cache: false,
                    contentType: false,
                    processData: false,

                    data: formData,
                    success: function (data) {
                        if (data.success) {
                            let file = data.file;
                            let row_id = 'file_'+file.name_hashed;
                            let music_elem = elem('div', {id: row_id, className: 'col s12', 'data-file': file.filename},
                                elem('h5', {className: 'song-title'},
                                    elem('a', {href: site.url + '/data/music/' + file.name + '.ogg', target: '_blank', className: 'blue-text link--hover', innerText: file.name},
                                        elem('i', {className: 'mdi mdi-open-in-new'})
                                    )
                                ),
                                elem('a', {className: 'right btn-floating delete-song red'},
                                    elem('i', {className: 'mdi mdi-delete'})
                                )
                            );

                            let row = document.getElementById(row_id);

                            if (!row) {
                                document.getElementById('music_files').appendChild(music_elem);
                                deleteSongEventRemove();
                                deleteSongEventInit();
                            } else {
                                toast('File already exists, but has been uploaded and overwritten', 4000, 'orange')
                                console.log('already exists jew');
                            }

                            toast(data.message, 2000,'green');
                            toast('The list of available songs has changed, you will<br>need to refresh the page to see them in the list', 3000, 'orange');
                        } else {
                            toast(data.message, -1, 'red');
                        }
                    }
                });
            }
        });

        function deleteSongEventInit() {
            $('.delete-song').on('click.deletesong', function () {
                let confirm = window.confirm('Are you sure you want to delete this?');
                let parent = $(this).parent().parent();
                let file = parent.data('file');

                if (confirm && file && file.length) {
                    let url = site.current;
                    if (url.substr(-1) === '/') {
                        url = url.substr(0, url.length -1);
                    }

                    url = url + '/delete';

                    // todo
                    $.post(url, {file}, function (data) {
                        if (data.success) {
                            parent.fadeOut(function() {this.remove()});
                            toast('The list of available songs has changed, you will<br>need to refresh the page to see them in the list', 3000, 'orange');
                        }

                        toast(data.message, 5000, (data.success ? 'green' : 'red'));
                        console.log(data);
                    })
                }
            });
        }

        function deleteSongEventRemove() {
            $('.delete-song').off('click.deletesong');
        }

        deleteSongEventInit();

        $('.materialize-select').material_select();

        function createElem_youtube() {
            return elem('div', {className: 'input-field child'},
                elem('input', {type: 'text', name: 'youtube[list][]', placeholder: 'YouTube URL', style: 'width:80%;'}),
                elem('a', {className: 'btn-floating delete-elem red'},
                    elem('i', {className: 'mdi mdi-delete'})
                )
            );
        }

        var recentClone = null;
        var previousClone = null;

        function createElem_musicSelect() {
            recentClone = music_files_select.cloneNode(true);

            return elem('div', {className: 'input-field child'}, recentClone, elem('a', {className: 'btn-floating delete-elem red'}, elem('i', {className: 'mdi mdi-delete'})));
        }

        function createElemCallback_musicSelect() {
            if (recentClone != previousClone) {
                $(recentClone).material_select();
                previousClone = recentClone;
            }
        }
    </script>
{% endblock %}