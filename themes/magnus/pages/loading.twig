{% extends '@loading/base.twig' %}

{% block title %}Magnus | K-Load{% endblock %}



{% block css %}
	<link rel="stylesheet" href="{{assets}}/css/grid.min.css" />
	<link rel="stylesheet" href="{{assets}}/css/grid-sm.min.css" media="all and (max-width: 575px)" />
	<link rel="stylesheet" href="{{assets}}/css/grid-md.min.css" media="all and (min-width: 766px)" />
	<link rel="stylesheet" href="{{assets}}/css/grid-lg.min.css" media="all and (min-width: 992px)" />
	<link href="https://fonts.googleapis.com/css?family=Rajdhani:300,400,600" rel="stylesheet">
	<link href="{{assets_theme}}/css/magnus.css" rel="stylesheet">
	<style>
		body:before { background-image:url({{site.url}}/themes/default/assets/img/particles_blue.jpg); }
	</style>
{% endblock %}

{% block body %}
	<div class="overlay dark"></div>
	<div class="pure-center">

		<!-- user info -->
		<div id="top-bar">
			<img class="avatar medium circle" src="{{ user.avatarfull|default(assets ~ '/img/avatar.jpg') }}">
			<div style="margin-top:4px;line-height:30px;width:calc(100% - 150px);">
				<p class="name">{{ user.personaname|default('Player') }}</p>
				<p class="messages">Welcome to {{ settings.community_name }}</p>
			</div>
		</div>

		<!-- blocks -->
		<!--
			To make the blocks white, remove the 'dark' css class e.g. class="row dark" -> class="row"
		`-->
		<div id="blocks" class="row dark">

			<!-- rules -->
			<div class="col sm-4 md-4">
				<div>
					<h1>Rules</h1>
					<div id="rules"></div>
				</div>
			</div>

			<!-- server info -->
			<div class="col sm-4 md-4">
				<div id="server-info">
					<h1>Server Info</h1>
					<div class="center-text"><img style="border-radius:3px;" onerror="this.src='https://images.weserv.nl/?url=https://image.gametracker.com/images/maps/160x120/nomap.jpg'" src="https://images.weserv.nl/?url=https://image.gametracker.com/images/maps/160x120/{% if map %}{{ 'garrysmod/' ~ map }}{% else %}nomap{% endif %}.jpg" /></div>
					<h2 class="center-text" style="margin-top:10px;font-weight:600;">{{ settings.community_name }}</h2>
					<p id="description" class="center-text">{{ settings.description }}</p>
					<table style="margin-top:10px">
						<tr>
							<td>Map:</td>
							<td class="map">{{ map|default('N/A') }}</td>
						</tr>
						<tr>
							<td>Gamemode:</td>
							<td class="gamemode"></td>
						</tr>
						<tr>
							<td>Max Players:</td>
							<td class="max-players"></td>
						</tr>
					</table>
					<hr style="border-color: rgba(255, 255, 255, 0.15)">
					<div class="center-text">
						<p style="font-weight: bold;">Downloading</p>
						<p class="downloading"></p>
					</div>
				</div>
			</div>

			<!-- staff -->
			<div class="col sm-4 md-4">
				<div>
					<h1>Staff</h1>
					<div id="staff"></div>
				</div>
			</div>

		</div>

		<!-- loading bar -->
		<div id="loading-bar-outer">
			<div class="loading-bar"></div>
		</div>

	</div>
{% endblock %}

{% block js %}
<script>
function GameDetails_custom(servername, serverurl, mapname, maxplayers, steamid, gamemode, demo) {
	showRules(gamemode);
	showStaff(gamemode);
}

function DownloadingFile_custom(fileName ) {
	text('downloading', fileName);
}

function showRules(gamemode) {
	if (rules[gamemode] instanceof Array === false) { gamemode = 'global'; }
	if (rules[gamemode] instanceof Array) {
		if (rules[gamemode].length > 0) {
			var real_cnt = 0;
			var rule_blocks = Math.ceil(rules[gamemode].length/7);
			for (var x = 0; x < rule_blocks; x++) {
				var children = [];
				for (var i = 0; i < 7; i++) {
					var rule = rules[gamemode][real_cnt] || null;
					real_cnt++;
					if (!rule) { continue; }

					children.push(elem('div',{ className: 'rule', innerText: rule}));
				}
				var rule_block = elem('div',{id: 'rule_block_'+x, className: 'rule-block'}, children);
				document.getElementById('rules').appendChild(rule_block);
				var rule_cnt = 0;
				var anim_dur = 1000;
				$('#rule_block_'+rule_cnt).children().each(function() {
					var elem = this;
					setTimeout(function(){
						$(elem).animate({opacity: '1'},{duration: 600});
					}, anim_dur);
					anim_dur = anim_dur+600;
				});
			}

			if (rules[gamemode].length > 7) {
				var rule_elems = $('.rule-block');
				rule_interval = setInterval(function(){
					$('#rule_block_'+rule_cnt).fadeOut(500, function() {
						anim_dur = 1000;
						rule_cnt++;
						if (rule_cnt >= rule_elems.length) {
							rule_cnt = 0;
						}
						$('#rule_block_'+rule_cnt).fadeIn(300);

						if ($('#rule_block_'+rule_cnt).children().css("opacity") == '0') {
							$('#rule_block_'+rule_cnt).children().each(function() {
								var elem = this;
								setTimeout(function(){
									$(elem).animate({opacity: '1'},{duration: 600});
								}, anim_dur);
								anim_dur = anim_dur+600;
							});
						}
					});
				}, 15000);
			}

		}
	}
}

function showStaff(gamemode) {
	if (Array.isArray(staff[gamemode]) === false) { gamemode = 'global'; }
	if (Array.isArray(staff[gamemode])) {
		if (staff[gamemode].length > 0) {
			if (typeof staffinterval !== 'undefined') {
				clearInterval(staffinterval);
			}
			var real_cnt = 0;
			var staff_blocks = Math.ceil(staff[gamemode].length/6);
			for (var i = 0; i < staff_blocks; i++) {
				var children = [];
				for (var x = 0; x < 6; x++) {
					var staff_member = staff[gamemode][real_cnt];
					real_cnt++;
					if (typeof staff_member === 'undefined') { continue; }
					var steamid = staff_member.steamid || null;
					var rank = staff_member.rank || 'Staff';

					children.push(
						elem('div',{className: 'member'}, [
							elem('img', {className: 'avatar small circle', src: site.path+'/api/player/'+steamid+'/avatarmedium/?raw'}),
							elem('div', {},[
								elem('p', {className: 'name name_'+steamid, innerText: '...'}),
								elem('p', {id: steamid+'_avatar', className: 'rank', innerText: rank})
							])
						])
					);
				}
				document.getElementById('staff').appendChild(
					elem('div',{id: 'staff_block_'+i, className: 'staff-block'}, children)
				);
			}
			getStaff();
			var staff_cnt = 0;
			if (staff[gamemode].length > 6) {
				var staff_elems = $('.staff-block');
				staffinterval = setInterval(function(){
					$('#staff_block_'+staff_cnt).fadeOut(500, function() {
						anim_dur = 1000;
						staff_cnt++;
						if (staff_cnt >= staff_elems.length) {
							staff_cnt = 0;
						}
						$('#staff_block_'+staff_cnt).fadeIn(300);
					});
				}, 8000);
			}

		}
	}
}
</script>
{% endblock %}
